readESM - digital tachograph file reader

This program takes an ESM file, as downloaded from a digital tachograph or a
driver card, a compulsory equipment for trucks heavier than 3.5 tons within the
European Union. It converts said files into human-readable form, either html or
simple plaintext.

So far the program just does this conversion, with a few datasets still unread,
and does little analysis of the data. More analysis is planned for the future,
but any serious attempt requires refactoring the data heavily, which might never
be done due to time constraints.

The digital tachographs and respective cards use industry standard security, 
with 1024-bit rsa, sha-1 hashes and individual certificates on each card
signed by ec member states authorities. The software checks the signatures and
certification chain for correctness, so far without checking the revoked-key
list.

The language of the project is C++, and development is done on a linux platform,
but it should be possible to compile it on any platform with a C++-compiler,
Qt, the stdlib and shared_ptr from boost. For signature checking the Gnu MP 
library and libgcrypt are needed.

** Compiling **

You can get the program files from my homepage
(http://andreas.goelzer.de/readesm-reading-digital-tachograph-files), or from
the development page (http://sourceforge.net/projects/readesm/) at Sourceforge.
Since so far there is no binary distribution for the program, you will have to
compile it yourself.

To do that, you need a C++ compiler, parts of the boost (http://www.boost.org/)
library (specifically program_options and shared_ptr) and the Gnu MP Library
(http://gmplib.org/), which is used to check the various RSA signatures. Once
all those are installed, typing make/make install should work fine. If not, it
might give you a hint what is still needed, if not, report your error. For
certain linux flavours, "sudo make packageinstall" will create and install a
package using checkinstall, which you can easily uninstall with your package
management tool.

On Ubuntu (http://www.ubuntu.com/) systems, you will need to do something like:

sudo apt-get install libboost-program-options-dev libgcrypt11-dev libgmp3-dev
svn co https://readesm.svn.sourceforge.net/svnroot/readesm readesm
cd readesm
mkdir build
cd build
cmake ..
make
sudo make install

Or use some method that integrates it into your package manager, like
aforementioned checkinstall.

** Running the program **

+ Start readesm, select a file to load from the menu. From the command line, this is
  either "readesm" if installed, or "./readesm" if you are in the build directory.
+ Start readesm with a filename as argument 


** Modifying the program **

You are free to modify the program under the terms of the GPL.
If you do so, note:
- Sometimes i added references to l207.pdf in the comments, that refers to
OJ:L:2002:207, p. 1-252,
http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2002:207:0001:0252:EN:PDF
- The code is rather unclean, often two or more classes in the same file, wild
naming convention(often taken from the european law, which has quite large
names.
- You can create a doxygen documentation by typing make doc, or within an
appropriate IDE.

Andreas GÃ¶lzer
February 17th, 2011
http://andreas.goelzer.de/
